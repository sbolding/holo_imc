//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : FluxFaceTally.cpp
//  @ Date : 1/31/2014
//  @ Author : 
//
//


#include <stdlib.h>
#include "../include/FluxFaceTally.h"

FluxFaceTally::FluxFaceTally(int n_angular_bins) : FaceTally(n_angular_bins)
{
}

void FluxFaceTally::incrementScore(double weight, double normal_cosine,
	double area)
{
	//Determine which bin you are in (currently it assumes only two)
	if (_bin_sums.size() == 2)
	{
		int angular_bin = floor(normal_cosine)+1; //either 0 or 1
		double value;
		if (abs(normal_cosine) >= COSINE_CUTOFF)
		{
			value = weight / (abs(normal_cosine)*area); 	
		}
		else //need to use cosien fixup to prevent very high scores
		{
			//std::cout << "Contribution to fixup cosine bin" << std::endl; //debug statement
			value = weight / (area*COSINE_SUBSTITUTE_VALUE);
		}
		_bin_sums[angular_bin][0] += value;
		_bin_sums_sq[angular_bin][0] += value*value;
	}
	else
	{
		std::cerr << "Tallies only handle two directions currently \n";
		exit(29);
	}
}
